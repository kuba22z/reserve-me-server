# ------------------------------------------------------
# THIS FILE WAS AUTOMATICALLY GENERATED (DO NOT MODIFY)
# ------------------------------------------------------

"""Client"""
type ClientDto {
  firstName: String!
  id: Float!
  lastName: String!
  phoneNumber: String!
}

input CreateMeetingDto {
  discount: Float
  employeeId: Float
  employeeIdCreated: Float!
  priceExcepted: Float
  priceFinal: Float
  priceFull: Float
  repeatRate: String!
  schedule: CreateMeetingScheduleDto!
}

"""CreateMeetingSchedule"""
input CreateMeetingScheduleDto {
  endDate: DateTime!
  locationId: Float!
  startDate: DateTime!
}

"""
A date-time string at UTC, such as 2019-12-03T09:54:33Z, compliant with the date-time format.
"""
scalar DateTime

"""Location"""
type LocationDto {
  city: String!
  houseNumber: Float!
  id: Float!
  name: String!
  postalCode: String!
  street: String!
}

"""Meeting"""
type MeetingDto {
  clients: [ClientDto!]!
  createdAt: DateTime!
  discount: Float!
  employeeId: Float!
  employeeIdCreated: Float!
  id: Float!
  priceExcepted: Float!
  priceFinal: Float!
  priceFull: Float!
  repeatRate: String
  schedules: [MeetingScheduleDto!]!
  updatedAt: DateTime!
}

"""MeetingSchedule"""
type MeetingScheduleDto {
  canceled: Boolean!
  cancellationReason: String
  endDate: DateTime!
  id: Float!
  location: LocationDto
  locationId: Float!
  startDate: DateTime!
}

type Mutation {
  createMeeting(meeting: CreateMeetingDto!): MeetingDto!
  updateMeeting(meeting: UpdateMeetingDto!): MeetingDto!
}

type Query {
  meetings: [MeetingDto!]!
  meetingsByInterval(canceled: Boolean, from: DateTime!, to: DateTime!): [MeetingDto!]!
}

input UpdateMeetingDto {
  discount: Float
  employeeId: Float
  employeeIdCreated: Float
  id: Float!
  locationId: Float
  priceExcepted: Float
  priceFinal: Float
  priceFull: Float
  repeatRate: String
  schedules: [UpdateMeetingScheduleDto!]
}

"""UpdateMeetingSchedule"""
input UpdateMeetingScheduleDto {
  canceled: Boolean
  cancellationReason: String
  endDate: DateTime
  id: Float!
  startDate: DateTime
}
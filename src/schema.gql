# This file was generated. Do not edit manually.

schema {
    query: Query
    mutation: Mutation
}

"Counter"
type CounterDto {
    count: Float!
}

"LocationDto"
type LocationDto {
    city: String!
    houseNumber: Float!
    id: Float!
    name: String!
    postalCode: String!
    street: String!
}

"Meeting"
type MeetingDto {
    createdAt: DateTime!
    createdByExternalRefId: String!
    discount: Float!
    id: Float!
    priceExcepted: Float!
    priceFinal: Float
    priceFull: Float
    repeatRate: String!
    schedules: [MeetingScheduleDto!]
    updatedAt: DateTime!
    userNames: [String!]!
}

"MeetingSchedule"
type MeetingScheduleDto {
    canceled: Boolean!
    cancellationReason: String
    endDate: DateTime!
    id: Float!
    location: LocationDto
    locationId: Float!
    startDate: DateTime!
}

type Mutation {
    createLocation(meeting: CreateLocationDto!): LocationDto!
    createMeeting(meeting: CreateMeetingDto!): MeetingDto!
    deleteMeetings(ids: [Int!]!): CounterDto!
    updateLocation(location: UpdateLocationDto!): LocationDto!
    updateMeeting(meeting: UpdateMeetingDto!): MeetingDto!
}

type Query {
    accessToken(authorizationCode: String!): TokenDto!
    locations: [LocationDto!]!
    meetings: [MeetingDto!]!
    meetingsByInterval(canceled: Boolean, from: DateTime!, to: DateTime!): [MeetingDto!]!
    user: UserDto!
    users: [UserDto!]!
    usersByGroup(group: CognitoGroups!): [UserDto!]!
}

"TokenDto"
type TokenDto {
    access_token: String!
    expires_in: Float!
    refresh_token: String!
    token_type: String!
}

"UserDto"
type UserDto {
    meetings: [MeetingDto!]
    name: String!
    phoneNumber: String!
    userName: String!
}

enum CognitoGroups {
    admin
    client
    employee
}

"A date-time string at UTC, such as 2019-12-03T09:54:33Z, compliant with the date-time format."
scalar DateTime

"CreateLocationDto"
input CreateLocationDto {
    city: String!
    houseNumber: Float!
    name: String!
    postalCode: String!
    street: String!
}

input CreateMeetingDto {
    createdByExternalRefId: String!
    discount: Float
    priceExcepted: Float!
    priceFinal: Float
    priceFull: Float
    repeatRate: String
    schedule: CreateMeetingScheduleDto!
}

"CreateMeetingSchedule"
input CreateMeetingScheduleDto {
    endDate: DateTime!
    locationId: Float!
    startDate: DateTime!
}

"UpdateLocationDto"
input UpdateLocationDto {
    id: Float!
}

input UpdateMeetingDto {
    discount: Float
    id: Float!
    locationId: Float
    priceExcepted: Float
    priceFinal: Float
    priceFull: Float
    repeatRate: String
    schedules: [UpdateMeetingScheduleDto!]
}

"UpdateMeetingSchedule"
input UpdateMeetingScheduleDto {
    canceled: Boolean
    cancellationReason: String
    endDate: DateTime
    id: Float!
    startDate: DateTime
}

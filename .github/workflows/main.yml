name: CICD

on:
  workflow_dispatch:
  push:
    branches:
      - dev

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Source
        uses: actions/checkout@v4

      - name: Setup Node
        uses: actions/setup-node@v4
        with:
          node-version: 20
# TODO commit encrypted .env maybe?
#      - name: Set env
#        uses: cardinalby/export-env-action@v1
#        with:
#          envFile: '.env.local'
#          expand: 'true'

      - name: Install dependencies
        run: npm ci
      - name: Execute unit tests
        run: npm run test:unit
# TODO: start docker container with postgres https://docs.github.com/en/actions/use-cases-and-examples/using-containerized-services/creating-postgresql-service-containers to execute e2e tests
#      - name: Execute e2e tests
#        run: npm run test:e2e
     # TODO include this later
     # - name: Install dotenv-cli
     #   run: npm install -g dotenv-cli
     #
     # - name: Migrate asw-rds database
     #   run: npm run migrate:prod
     # - name: Build application
     #   run: npm run build

  deploy:
     runs-on: ubuntu-latest
     needs: build  # Ensure that the deploy job runs after the build job
     if: github.ref == 'refs/heads/dev'  # Only run on 'dev' branch
     steps:
       - name: Checkout Source
         uses: actions/checkout@v4

       - name: Generate Deployment Package
         run: zip -r reserve-me-server-deploy.zip . -x '*.git*'

       - name: Deploy to EB
         uses: einaregilsson/beanstalk-deploy@v22
         with:
           aws_access_key: ${{ secrets.AWS_ACCESS_KEY_ID }}
           aws_secret_key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
           application_name: reserve-me-server
           environment_name: reserve-me-server-dev2
           version_label: ${{ github.sha }}

           region: eu-central-1
           deployment_package: reserve-me-server-deploy.zip
           use_existing_version_if_available: true